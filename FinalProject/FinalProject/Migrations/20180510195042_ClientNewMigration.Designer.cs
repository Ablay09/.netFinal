// <auto-generated />
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FinalProject.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180510195042_ClientNewMigration")]
    partial class ClientNewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProject.Models.Arenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Finish");

                    b.Property<int>("RaionId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("RaionId");

                    b.ToTable("Arendas");
                });

            modelBuilder.Entity("FinalProject.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArendaId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ArendaId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("FinalProject.Models.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArendaId");

                    b.Property<int>("KvartiraId");

                    b.HasKey("Id");

                    b.HasIndex("ArendaId");

                    b.HasIndex("KvartiraId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("FinalProject.Models.Kvartira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<double>("Price");

                    b.Property<int>("RaionId");

                    b.HasKey("Id");

                    b.HasIndex("RaionId");

                    b.ToTable("Kvartiras");
                });

            modelBuilder.Entity("FinalProject.Models.Raion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<double>("Nalog");

                    b.HasKey("Id");

                    b.ToTable("Raions");
                });

            modelBuilder.Entity("FinalProject.Models.Arenda", b =>
                {
                    b.HasOne("FinalProject.Models.Raion", "Raion")
                        .WithMany()
                        .HasForeignKey("RaionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FinalProject.Models.Client", b =>
                {
                    b.HasOne("FinalProject.Models.Arenda", "Arenda")
                        .WithMany()
                        .HasForeignKey("ArendaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FinalProject.Models.Detail", b =>
                {
                    b.HasOne("FinalProject.Models.Arenda", "Arenda")
                        .WithMany()
                        .HasForeignKey("ArendaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FinalProject.Models.Kvartira", "Kvartira")
                        .WithMany()
                        .HasForeignKey("KvartiraId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("FinalProject.Models.Kvartira", b =>
                {
                    b.HasOne("FinalProject.Models.Raion", "Raion")
                        .WithMany()
                        .HasForeignKey("RaionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
